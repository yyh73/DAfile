import axios from "axios";
import { Calendar } from "@fullcalendar/core";
import dayGridPlugin from "@fullcalendar/daygrid";
import timeGridPlugin from "@fullcalendar/timegrid";
import interactionPlugin from "@fullcalendar/interaction";

// Êó•‰ªò„Éï„Ç©„Éº„Éû„ÉÉ„ÉàÈñ¢Êï∞
function formatDate(date, pos) {
    const dt = new Date(date);
    if (pos === "end") {
        dt.setDate(dt.getDate() - 1);
    }
    return dt.toISOString().slice(0, 16).replace("T", " ");
}

function formatDateForInput(date) {
    if (!date) return "";
    return new Date(date).toISOString().slice(0, 16);
}

// „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„ÅÆÂá¶ÁêÜ
document.addEventListener("DOMContentLoaded", function () {
    const saveButton = document.getElementById("save-new-event-button");
    

    if (saveButton) {
    saveButton.addEventListener("click", function (){
        
    });
}
    
    function scheduleReminder(event) {
        if (!event.reminder_time || Notification.permission !== "granted") {
            return;
        }

        const eventStartTime = new Date(event.start).getTime();
        const reminderTime = event.reminder_time * 60 * 1000; // ÂàÜ ‚Üí „Éü„É™ÁßíÂ§âÊèõ
        const reminderTimestamp = eventStartTime - reminderTime;

        const now = Date.now();
        if (reminderTimestamp > now) {
            setTimeout(() => {
                new Notification("„É™„Éû„Ç§„É≥„ÉÄ„Éº", {
                    body: `‰∫àÂÆö: ${event.title} „Åå„Åæ„ÇÇ„Å™„ÅèÂßã„Åæ„Çä„Åæ„ÅôÔºÅ`,
                    icon: "/path/to/icon.png",
                });
            }, reminderTimestamp - now);
        }
    }

    // „É¢„Éº„ÉÄ„É´„ÅÆÈñãÈñâÂá¶ÁêÜ
    window.closeAddModal = function () {
        document.getElementById("modal-add").style.display = "none";
    };

    window.closeUpdateModal = function () {
        document.getElementById("modal-update").style.display = "none";
    };

    window.deleteEvent = function () {
        if (confirm("ÂâäÈô§„Åô„Çã„Å®Âæ©ÂÖÉ„Åß„Åç„Åæ„Åõ„Çì„ÄÇ\nÊú¨ÂΩì„Å´ÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü")) {
            document.getElementById("delete-form").submit();
        }
    };

    //„Éñ„É©„Ç¶„Ç∂ÈÄöÁü•„ÅÆË®±ÂèØ„É™„ÇØ„Ç®„Çπ„Éà
    if ("Notification" in window) {
        Notification.requestPermission().then(permission => {
            console.log("ÈÄöÁü•„ÅÆË®±ÂèØÁä∂ÊÖã:", permission);
        });
    } else {
        console.log("„Åì„ÅÆ„Éñ„É©„Ç¶„Ç∂„ÅØÈÄöÁü•„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ");
    }

    const calendarEl = document.getElementById("calendar");
    if (!calendarEl) {
        console.error("„Ç®„É©„Éº: #calendar „ÅÆË¶ÅÁ¥†„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºÅ");
        return;
    }

    let currentView = "dayGridMonth";

    const calendar = new Calendar(calendarEl, {
        plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],
        initialView: "dayGridMonth",
        locale: "ja",
        buttonText: {
            today: "‰ªäÊó•",
            month: "Êúà",
            week: "ÈÄ±",
            day: "Êó•",
        },
        headerToolbar: {
            start: "prev,next today",
            center: "title",
            end: "eventAddButton dayGridMonth,timeGridWeek,timeGridDay",
        },
        height: "auto",
        nowIndicator: true,
        allDaySlot: false,
        eventTimeFormat: {
            hour: "2-digit",
            minute: "2-digit",
            hour12: false,
            omitZeroMinute: false,
        },
        views: {
            timeGridWeek: {
                slotDuration: "00:10:00", // ÈÄ±„Ç´„É¨„É≥„ÉÄ„Éº„Åß„ÅØ10ÂàÜÂçò‰Ωç
                slotLabelInterval: "00:10:00",
                slotLabelFormat: {
                    hour: "2-digit", // ÊôÇÂàª„ÅÆÂΩ¢Âºè„ÇíË®≠ÂÆö
                    minute: "2-digit",
                    hour12: false, // 24ÊôÇÈñìË°®Ë®ò
                    omitZeroMinute: false, // 0ÂàÜ„ÇÇË°®Á§∫„Åô„Çã
                }
            },
            timeGridDay: {
                slotDuration: "00:10:00", // Êó•„Ç´„É¨„É≥„ÉÄ„Éº„Åß„ÅØ10ÂàÜÂçò‰Ωç
                slotLabelInterval: "00:10:00",
                slotLabelFormat: {
                    hour: "2-digit",
                    minute: "2-digit",
                    hour12: false,
                    omitZeroMinute: false,
                }
            }
        },
        selectable: true,

        events: function (info, successCallback, failureCallback) {
            console.log("üì§ ‰∫àÂÆö„ÇíÂèñÂæó„Åô„Çã„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ‰ø°:", {
                start_date: info.start.toISOString().split("T")[0],
                end_date: info.end.toISOString().split("T")[0],
                view: currentView,
            });

            axios.post("/calendar/get", {
                start_date: info.start.toISOString().split("T")[0],
                end_date: info.end.toISOString().split("T")[0],
                view: currentView,
            })
            .then((response) => {
                console.log("üì• „Çµ„Éº„Éê„Éº„Åã„ÇâÂèó„ÅëÂèñ„Å£„Åü„Éá„Éº„Çø:", response.data);

                if (!Array.isArray(response.data)) {
                    console.error("„Éá„Éº„Çø„ÅÆÂΩ¢Âºè„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì:", response.data);
                    alert("„Ç§„Éô„É≥„Éà„Éá„Éº„Çø„ÅÆÂΩ¢Âºè„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ");
                    return;
                }

                const formattedEvents = response.data.map(event => {
                    const eventData = {
                        id: event.id,
                        title: event.title,
                        start: event.start,
                        end: event.end,
                        backgroundColor: event.backgroundColor || "blue",
                        borderColor: event.borderColor || "blue",
                        description: event.description || "",
                        reminder_time: event.reminder_time || null
                    };
                    scheduleReminder(eventData);
                    return eventData;
                });
                console.log("‚úÖ „Éï„Ç©„Éº„Éû„ÉÉ„ÉàÂæå„ÅÆ‰∫àÂÆö„Éá„Éº„Çø:", formattedEvents);
                successCallback(formattedEvents);
                
            })
            .catch((error) => {
                console.error("„Ç§„Éô„É≥„Éà„ÅÆÂèñÂæó„Å´Â§±Êïó:", error);
                alert("ÁôªÈå≤„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ");
                failureCallback(error);
            });
        },

        select: function (info) {
            document.getElementById("id").value = "";
            document.getElementById("event_title").value = "";
            document.getElementById("start_date").value = formatDate(info.start, "start");
            document.getElementById("end_date").value = formatDate(info.end, "end");
            document.getElementById("event_body").value = "";
            document.getElementById("event_color").value = "blue";
            document.getElementById('modal-add').style.display = 'flex';
    },


        eventClick: function (info) {
            document.getElementById("id").value = info.event.id;
            document.getElementById("delete-id").value = info.event.id;
            document.getElementById("event_title").value = info.event.title;
            document.getElementById("start_date").value = formatDateForInput(info.event.start);
            document.getElementById("end_date").value = formatDateForInput(info.event.end);
            document.getElementById("event_body").value = info.event.extendedProps.description;
            document.getElementById("event_color").value = info.event.backgroundColor;
            document.getElementById("modal-update").style.display = "flex";
        },

        customButtons: { 
            eventAddButton: { 
                text: "‰∫àÂÆö„ÇíËøΩÂä†",
                click: function () {
                    document.getElementById("id").value = "";
                    document.getElementById("event_title").value = "";
                    document.getElementById("start_date").value = "";
                    document.getElementById("end_date").value = "";
                    document.getElementById("event_body").value = "";
                    document.getElementById("event_color").value = "blue";
                    document.getElementById("modal-add").style.display = "flex";
                }
            }
        }
});
    
    calendar.render();

    document.getElementById("save-new-event-button").addEventListener("click", function (event) {event.preventDefault();
        const eventTitle = document.getElementById("new-event_title").value;
        const startDate = document.getElementById("new-start_date").value;
        const endDate = document.getElementById("new-end_date").value;
        const eventBody = document.getElementById("new-event_body").value;
        const eventColor = document.getElementById("new-event_color").value;
        const reminderTime = document.getElementById("reminder_time")?.value || null; // „É™„Éû„Ç§„É≥„ÉÄ„ÉºÊôÇÈñì„ÇíÂèñÂæó
        console.log("ÈÄÅ‰ø°„Åô„Çã„É™„Éû„Ç§„É≥„ÉÄ„ÉºÊôÇÈñì:", reminderTime); // ÈÄÅ‰ø°„Éá„Éº„Çø„ÅÆÁ¢∫Ë™çÁî®

        console.log("üì§ „É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ‰ø°„Åô„Çã„ÇàÔºÅ");
        axios.post("/calendar/create", {
            event_title: document.getElementById("event_title").value,
            start_date: document.getElementById("start_date").value,
            end_date: document.getElementById("end_date").value,
            event_body: document.getElementById("event_body").value,
            event_color: document.getElementById("event_color").value,
            // ÈÄÅ‰ø°„Åô„Çã„É™„Éû„Ç§„É≥„ÉÄ„ÉºÊôÇÈñì
            reminder_time: document.getElementById("reminder_time")?.value || null,
        })
        .then(response => {
            console.log("‚úÖ ‰∫àÂÆö„ÅåËøΩÂä†„Åï„Çå„Åæ„Åó„Åü:", response.data);
            calendar.refetchEvents(); // ‰∫àÂÆö„Çí„É™„É≠„Éº„Éâ„Åó„Å¶Ë°®Á§∫Êõ¥Êñ∞
            document.getElementById("modal-add").style.display = "none"; // „É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Çã
        })
        .catch(error => {
            console.error("‚ùå „Ç®„É©„Éº:", error);
        });
        console.log("üì§ axios.post „ÇíÂÆüË°å„Åó„ÅüÁõ¥ÂæåÔºÅ");
    });
    
    document.getElementById("update-form")?.addEventListener("submit", function () {
        setTimeout(() => {
            calendar.refetchEvents();
        }, 500);
    });
});
